name: CI
on:
  pull_request:
  push:
    tags:
      - "v*"
    paths-ignore:
      - "**/CHANGELOG.md"
      - "**/package.json"
      - "**/Cargo.toml"
      - "**/Cargo.lock"
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  pre_run:
    name: Cancel previous runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@ad6cb1b847ffb509a69b745b6ee2f1d14dfe14b8
        with:
          access_token: ${{ github.token }}

  audit:
    name: Audit and format
    runs-on: ubuntu-latest
    needs: pre_run
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Install dependencies
        run: cargo install cargo-audit

      - name: Run audit
        run: cargo audit --ignore RUSTSEC-2021-0119

      - name: Run rustfmt
        run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: pre_run

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true


      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}

      - name: Install dependencies
        run: cargo install wasm-pack

      - name: Build - Cargo
        run: cargo build --release

      - name: Build - WASM
        run: wasm-pack build --target web --release -- --no-default-features --features wasm

      - name: Upload clarity-repl to workflow run
        uses: actions/upload-artifact@v2
        with:
          name: clarity-repl
          path: target/release/clarity-repl

      - name: Upload wasm to workflow run
        uses: actions/upload-artifact@v2
        with:
          name: clarity_repl.wasm
          path: target/wasm32-unknown-unknown/release/clarity_repl.wasm

      - name: Publish clarity-repl to crates.io
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cargo login ${{ secrets.CARGO_CRATES_IO_API_KEY }}
          cargo publish

      - name: Upload wasm to GH release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/wasm32-unknown-unknown/release/clarity_repl.wasm
          tag: ${{ github.ref }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: contains(github.ref, 'main')
    needs:
      - audit
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Necessary for Semantic Release
          token: ${{ secrets.GH_TOKEN }}

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SEMANTIC_RELEASE_PACKAGE: ${{ github.event.repository.name }}
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/exec
            @semantic-release/git
